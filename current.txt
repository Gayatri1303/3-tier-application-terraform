# aws_alb.alb:
resource "aws_alb" "alb" {
    arn                                                          = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:loadbalancer/app/3-tier/d4086c0fbc8188a5"
    arn_suffix                                                   = "app/3-tier/d4086c0fbc8188a5"
    client_keep_alive                                            = 3600
    customer_owned_ipv4_pool                                     = null
    desync_mitigation_mode                                       = "defensive"
    dns_name                                                     = "3-tier-2119064593.ap-south-1.elb.amazonaws.com"
    drop_invalid_header_fields                                   = false
    enable_cross_zone_load_balancing                             = true
    enable_deletion_protection                                   = false
    enable_http2                                                 = true
    enable_tls_version_and_cipher_suite_headers                  = false
    enable_waf_fail_open                                         = false
    enable_xff_client_port                                       = false
    enable_zonal_shift                                           = false
    enforce_security_group_inbound_rules_on_private_link_traffic = null
    id                                                           = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:loadbalancer/app/3-tier/d4086c0fbc8188a5"
    idle_timeout                                                 = 60
    internal                                                     = false
    ip_address_type                                              = "ipv4"
    load_balancer_type                                           = "application"
    name                                                         = "3-tier"
    name_prefix                                                  = null
    preserve_host_header                                         = false
    region                                                       = "ap-south-1"
    security_groups                                              = [
        "sg-0b8e930e4567bea8c",
    ]
    subnets                                                      = [
        "subnet-002883a4d50eda0ff",
        "subnet-051e280e3221b4075",
    ]
    tags                                                         = {}
    tags_all                                                     = {}
    vpc_id                                                       = "vpc-01749bcbb72e03da4"
    xff_header_processing_mode                                   = "append"
    zone_id                                                      = "ZP97RAFLXTNZK"

    access_logs {
        bucket  = null
        enabled = false
        prefix  = null
    }

    connection_logs {
        bucket  = null
        enabled = false
        prefix  = null
    }

    subnet_mapping {
        allocation_id        = null
        ipv6_address         = null
        outpost_id           = null
        private_ipv4_address = null
        subnet_id            = "subnet-002883a4d50eda0ff"
    }
    subnet_mapping {
        allocation_id        = null
        ipv6_address         = null
        outpost_id           = null
        private_ipv4_address = null
        subnet_id            = "subnet-051e280e3221b4075"
    }
}

# aws_db_instance.rds:
resource "aws_db_instance" "rds" {
    address                               = "terraform-20251014130156916600000005.c182ic40c7bn.ap-south-1.rds.amazonaws.com"
    allocated_storage                     = 20
    apply_immediately                     = false
    arn                                   = "arn:aws:rds:ap-south-1:963329266843:db:terraform-20251014130156916600000005"
    auto_minor_version_upgrade            = true
    availability_zone                     = "ap-south-1b"
    backup_retention_period               = 0
    backup_target                         = "region"
    backup_window                         = "16:57-17:27"
    ca_cert_identifier                    = "rds-ca-rsa2048-g1"
    character_set_name                    = null
    copy_tags_to_snapshot                 = false
    custom_iam_instance_profile           = null
    customer_owned_ip_enabled             = false
    database_insights_mode                = "standard"
    db_name                               = "mydb"
    db_subnet_group_name                  = "rds-subnet-group"
    dedicated_log_volume                  = false
    delete_automated_backups              = true
    deletion_protection                   = false
    domain                                = null
    domain_auth_secret_arn                = null
    domain_dns_ips                        = []
    domain_fqdn                           = null
    domain_iam_role_name                  = null
    domain_ou                             = null
    enabled_cloudwatch_logs_exports       = []
    endpoint                              = "terraform-20251014130156916600000005.c182ic40c7bn.ap-south-1.rds.amazonaws.com:5432"
    engine                                = "postgres"
    engine_lifecycle_support              = "open-source-rds-extended-support"
    engine_version                        = "17.4"
    engine_version_actual                 = "17.4"
    hosted_zone_id                        = "Z2VFMSZA74J7XZ"
    iam_database_authentication_enabled   = false
    id                                    = "db-LMHJNJJP6FG652WAXZPOV6TYRI"
    identifier                            = "terraform-20251014130156916600000005"
    identifier_prefix                     = "terraform-"
    instance_class                        = "db.t3.micro"
    iops                                  = 0
    kms_key_id                            = null
    latest_restorable_time                = null
    license_model                         = "postgresql-license"
    listener_endpoint                     = []
    maintenance_window                    = "sat:11:08-sat:11:38"
    master_user_secret                    = []
    max_allocated_storage                 = 0
    monitoring_interval                   = 0
    monitoring_role_arn                   = null
    multi_az                              = false
    nchar_character_set_name              = null
    network_type                          = "IPV4"
    option_group_name                     = "default:postgres-17"
    parameter_group_name                  = "default.postgres17"
    password                              = (sensitive value)
    password_wo                           = (write-only attribute)
    performance_insights_enabled          = false
    performance_insights_kms_key_id       = null
    performance_insights_retention_period = 0
    port                                  = 5432
    publicly_accessible                   = false
    region                                = "ap-south-1"
    replica_mode                          = null
    replicas                              = []
    replicate_source_db                   = null
    resource_id                           = "db-LMHJNJJP6FG652WAXZPOV6TYRI"
    skip_final_snapshot                   = true
    status                                = "available"
    storage_encrypted                     = false
    storage_throughput                    = 0
    storage_type                          = "gp2"
    tags                                  = {}
    tags_all                              = {}
    timezone                              = null
    username                              = "postgres"
    vpc_security_group_ids                = [
        "sg-002b2bb7503bc9906",
    ]
}

# aws_db_subnet_group.rds_subnet_group:
resource "aws_db_subnet_group" "rds_subnet_group" {
    arn                     = "arn:aws:rds:ap-south-1:963329266843:subgrp:rds-subnet-group"
    description             = "Managed by Terraform"
    id                      = "rds-subnet-group"
    name                    = "rds-subnet-group"
    name_prefix             = null
    region                  = "ap-south-1"
    subnet_ids              = [
        "subnet-0b4fc39eb5c7d510b",
        "subnet-0e04cf3537d08ee71",
    ]
    supported_network_types = [
        "IPV4",
    ]
    tags                    = {}
    tags_all                = {}
    vpc_id                  = "vpc-01749bcbb72e03da4"
}

# aws_eip.eip:
resource "aws_eip" "eip" {
    allocation_id            = "eipalloc-0f4719787dd923cd7"
    arn                      = "arn:aws:ec2:ap-south-1:963329266843:elastic-ip/eipalloc-0f4719787dd923cd7"
    association_id           = "eipassoc-0742c1944cb885535"
    carrier_ip               = null
    customer_owned_ip        = null
    customer_owned_ipv4_pool = null
    domain                   = "vpc"
    id                       = "eipalloc-0f4719787dd923cd7"
    instance                 = null
    network_border_group     = "ap-south-1"
    network_interface        = "eni-0c48850fdd411122e"
    private_dns              = "ip-10-0-1-213.ap-south-1.compute.internal"
    private_ip               = "10.0.1.213"
    ptr_record               = null
    public_dns               = "ec2-52-66-13-206.ap-south-1.compute.amazonaws.com"
    public_ip                = "52.66.13.206"
    public_ipv4_pool         = "amazon"
    region                   = "ap-south-1"
    tags                     = {
        "Name" = " eip11"
    }
    tags_all                 = {
        "Name" = " eip11"
    }
}

# aws_internet_gateway.example:
resource "aws_internet_gateway" "example" {
    arn      = "arn:aws:ec2:ap-south-1:963329266843:internet-gateway/igw-0ed1eb8214495982a"
    id       = "igw-0ed1eb8214495982a"
    owner_id = "963329266843"
    region   = "ap-south-1"
    tags     = {
        "Name" = "IGW1"
    }
    tags_all = {
        "Name" = "IGW1"
    }
    vpc_id   = "vpc-01749bcbb72e03da4"
}

# aws_lb_listener.example_listener:
resource "aws_lb_listener" "example_listener" {
    arn                                                                 = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:listener/app/3-tier/d4086c0fbc8188a5/7841327df65396ec"
    id                                                                  = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:listener/app/3-tier/d4086c0fbc8188a5/7841327df65396ec"
    load_balancer_arn                                                   = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:loadbalancer/app/3-tier/d4086c0fbc8188a5"
    port                                                                = 80
    protocol                                                            = "HTTP"
    region                                                              = "ap-south-1"
    routing_http_response_access_control_allow_credentials_header_value = null
    routing_http_response_access_control_allow_headers_header_value     = null
    routing_http_response_access_control_allow_methods_header_value     = null
    routing_http_response_access_control_allow_origin_header_value      = null
    routing_http_response_access_control_expose_headers_header_value    = null
    routing_http_response_access_control_max_age_header_value           = null
    routing_http_response_content_security_policy_header_value          = null
    routing_http_response_server_enabled                                = true
    routing_http_response_strict_transport_security_header_value        = null
    routing_http_response_x_content_type_options_header_value           = null
    routing_http_response_x_frame_options_header_value                  = null
    ssl_policy                                                          = null
    tags                                                                = {}
    tags_all                                                            = {}

    default_action {
        order            = 1
        target_group_arn = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/frontend/cbb1d2e9e124a82a"
        type             = "forward"
    }
}

# aws_lb_listener.http_listener:
resource "aws_lb_listener" "http_listener" {
    arn                                                                 = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:listener/app/3-tier/d4086c0fbc8188a5/7841327df65396ec"
    id                                                                  = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:listener/app/3-tier/d4086c0fbc8188a5/7841327df65396ec"
    load_balancer_arn                                                   = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:loadbalancer/app/3-tier/d4086c0fbc8188a5"
    port                                                                = 80
    protocol                                                            = "HTTP"
    region                                                              = "ap-south-1"
    routing_http_response_access_control_allow_credentials_header_value = null
    routing_http_response_access_control_allow_headers_header_value     = null
    routing_http_response_access_control_allow_methods_header_value     = null
    routing_http_response_access_control_allow_origin_header_value      = null
    routing_http_response_access_control_expose_headers_header_value    = null
    routing_http_response_access_control_max_age_header_value           = null
    routing_http_response_content_security_policy_header_value          = null
    routing_http_response_server_enabled                                = true
    routing_http_response_strict_transport_security_header_value        = null
    routing_http_response_x_content_type_options_header_value           = null
    routing_http_response_x_frame_options_header_value                  = null
    ssl_policy                                                          = null
    tags                                                                = {}
    tags_all                                                            = {}

    default_action {
        order            = 1
        target_group_arn = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/frontend/cbb1d2e9e124a82a"
        type             = "forward"
    }
}

# aws_lb_listener_rule.backend_rule:
resource "aws_lb_listener_rule" "backend_rule" {
    arn          = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:listener-rule/app/3-tier/d4086c0fbc8188a5/7841327df65396ec/4aacc49c40c3a52c"
    id           = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:listener-rule/app/3-tier/d4086c0fbc8188a5/7841327df65396ec/4aacc49c40c3a52c"
    listener_arn = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:listener/app/3-tier/d4086c0fbc8188a5/7841327df65396ec"
    priority     = 1
    region       = "ap-south-1"
    tags         = {}
    tags_all     = {}

    action {
        order            = 1
        target_group_arn = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/backend/122ff318a9403f75"
        type             = "forward"
    }

    condition {
        path_pattern {
            values = [
                "/api*",
                "/api/*",
            ]
        }
    }
}

# aws_lb_target_group.backend:
resource "aws_lb_target_group" "backend" {
    arn                                = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/backend/122ff318a9403f75"
    arn_suffix                         = "targetgroup/backend/122ff318a9403f75"
    deregistration_delay               = "300"
    id                                 = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/backend/122ff318a9403f75"
    ip_address_type                    = "ipv4"
    lambda_multi_value_headers_enabled = false
    load_balancer_arns                 = [
        "arn:aws:elasticloadbalancing:ap-south-1:963329266843:loadbalancer/app/3-tier/d4086c0fbc8188a5",
    ]
    load_balancing_algorithm_type      = "round_robin"
    load_balancing_anomaly_mitigation  = "off"
    load_balancing_cross_zone_enabled  = "use_load_balancer_configuration"
    name                               = "backend"
    name_prefix                        = null
    port                               = 5000
    protocol                           = "HTTP"
    protocol_version                   = "HTTP1"
    proxy_protocol_v2                  = false
    region                             = "ap-south-1"
    slow_start                         = 0
    tags                               = {}
    tags_all                           = {}
    target_type                        = "instance"
    vpc_id                             = "vpc-01749bcbb72e03da4"

    health_check {
        enabled             = true
        healthy_threshold   = 3
        interval            = 30
        matcher             = "200"
        path                = "/api"
        port                = "traffic-port"
        protocol            = "HTTP"
        timeout             = 5
        unhealthy_threshold = 3
    }

    stickiness {
        cookie_duration = 86400
        cookie_name     = null
        enabled         = false
        type            = "lb_cookie"
    }

    target_failover {}

    target_group_health {
        dns_failover {
            minimum_healthy_targets_count      = "1"
            minimum_healthy_targets_percentage = "off"
        }
        unhealthy_state_routing {
            minimum_healthy_targets_count      = 1
            minimum_healthy_targets_percentage = "off"
        }
    }

    target_health_state {}
}

# aws_lb_target_group.frontend:
resource "aws_lb_target_group" "frontend" {
    arn                                = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/frontend/cbb1d2e9e124a82a"
    arn_suffix                         = "targetgroup/frontend/cbb1d2e9e124a82a"
    deregistration_delay               = "300"
    id                                 = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/frontend/cbb1d2e9e124a82a"
    ip_address_type                    = "ipv4"
    lambda_multi_value_headers_enabled = false
    load_balancer_arns                 = [
        "arn:aws:elasticloadbalancing:ap-south-1:963329266843:loadbalancer/app/3-tier/d4086c0fbc8188a5",
    ]
    load_balancing_algorithm_type      = "round_robin"
    load_balancing_anomaly_mitigation  = "off"
    load_balancing_cross_zone_enabled  = "use_load_balancer_configuration"
    name                               = "frontend"
    name_prefix                        = null
    port                               = 80
    protocol                           = "HTTP"
    protocol_version                   = "HTTP1"
    proxy_protocol_v2                  = false
    region                             = "ap-south-1"
    slow_start                         = 0
    tags                               = {}
    tags_all                           = {}
    target_type                        = "instance"
    vpc_id                             = "vpc-01749bcbb72e03da4"

    health_check {
        enabled             = true
        healthy_threshold   = 3
        interval            = 30
        matcher             = "200"
        path                = "/"
        port                = "traffic-port"
        protocol            = "HTTP"
        timeout             = 5
        unhealthy_threshold = 3
    }

    stickiness {
        cookie_duration = 86400
        cookie_name     = null
        enabled         = false
        type            = "lb_cookie"
    }

    target_failover {}

    target_group_health {
        dns_failover {
            minimum_healthy_targets_count      = "1"
            minimum_healthy_targets_percentage = "off"
        }
        unhealthy_state_routing {
            minimum_healthy_targets_count      = 1
            minimum_healthy_targets_percentage = "off"
        }
    }

    target_health_state {}
}

# aws_lb_target_group_attachment.backend_attach:
resource "aws_lb_target_group_attachment" "backend_attach" {
    id               = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/backend/122ff318a9403f75-20251014131931583700000004"
    port             = 5000
    region           = "ap-south-1"
    target_group_arn = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/backend/122ff318a9403f75"
    target_id        = "i-0c383aadf96452d56"
}

# aws_lb_target_group_attachment.frontend_attach:
resource "aws_lb_target_group_attachment" "frontend_attach" {
    id               = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/frontend/cbb1d2e9e124a82a-20251014131910017000000003"
    port             = 80
    region           = "ap-south-1"
    target_group_arn = "arn:aws:elasticloadbalancing:ap-south-1:963329266843:targetgroup/frontend/cbb1d2e9e124a82a"
    target_id        = "i-0aaa2b723f3a023f5"
}

# aws_nat_gateway.example:
resource "aws_nat_gateway" "example" {
    allocation_id                      = "eipalloc-0f4719787dd923cd7"
    association_id                     = "eipassoc-0742c1944cb885535"
    connectivity_type                  = "public"
    id                                 = "nat-0af4d9741c44a9ebc"
    network_interface_id               = "eni-0c48850fdd411122e"
    private_ip                         = "10.0.1.213"
    public_ip                          = "52.66.13.206"
    region                             = "ap-south-1"
    secondary_allocation_ids           = []
    secondary_private_ip_address_count = 0
    secondary_private_ip_addresses     = []
    subnet_id                          = "subnet-051e280e3221b4075"
    tags                               = {
        "Name" = "NATgw"
    }
    tags_all                           = {
        "Name" = "NATgw"
    }
}

# aws_network_acl.privnacl:
resource "aws_network_acl" "privnacl" {
    arn        = "arn:aws:ec2:ap-south-1:963329266843:network-acl/acl-0846a4164681baaa7"
    egress     = [
        {
            action          = "allow"
            cidr_block      = "0.0.0.0/0"
            from_port       = 0
            icmp_code       = 0
            icmp_type       = 0
            ipv6_cidr_block = null
            protocol        = "-1"
            rule_no         = 100
            to_port         = 0
        },
    ]
    id         = "acl-0846a4164681baaa7"
    ingress    = [
        {
            action          = "allow"
            cidr_block      = "0.0.0.0/0"
            from_port       = 80
            icmp_code       = 0
            icmp_type       = 0
            ipv6_cidr_block = null
            protocol        = "6"
            rule_no         = 100
            to_port         = 80
        },
    ]
    owner_id   = "963329266843"
    region     = "ap-south-1"
    subnet_ids = [
        "subnet-0b4fc39eb5c7d510b",
        "subnet-0e04cf3537d08ee71",
    ]
    tags       = {
        "Name" = "privnacl"
    }
    tags_all   = {
        "Name" = "privnacl"
    }
    vpc_id     = "vpc-01749bcbb72e03da4"
}

# aws_network_acl_association.privnacl:
resource "aws_network_acl_association" "privnacl" {
    id             = "aclassoc-021952209ad1c67a2"
    network_acl_id = "acl-0846a4164681baaa7"
    region         = "ap-south-1"
    subnet_id      = "subnet-0e04cf3537d08ee71"
}

# aws_network_acl_association.pubnacl:
resource "aws_network_acl_association" "pubnacl" {
    id             = "aclassoc-0ae6ae11f2a31611a"
    network_acl_id = "acl-05429e555c3441c80"
    region         = "ap-south-1"
    subnet_id      = "subnet-051e280e3221b4075"
}

# aws_network_acl_association.pubnacl2:
resource "aws_network_acl_association" "pubnacl2" {
    id             = "aclassoc-0e69071e640a73c2a"
    network_acl_id = "acl-05429e555c3441c80"
    region         = "ap-south-1"
    subnet_id      = "subnet-002883a4d50eda0ff"
}

# aws_route.pbrt1:
resource "aws_route" "pbrt1" {
    carrier_gateway_id          = null
    core_network_arn            = null
    destination_cidr_block      = "0.0.0.0/0"
    destination_ipv6_cidr_block = null
    destination_prefix_list_id  = null
    egress_only_gateway_id      = null
    gateway_id                  = "igw-0ed1eb8214495982a"
    id                          = "r-rtb-003d6d6b6dbefbe471080289494"
    instance_id                 = null
    instance_owner_id           = null
    local_gateway_id            = null
    nat_gateway_id              = null
    network_interface_id        = null
    origin                      = "CreateRoute"
    region                      = "ap-south-1"
    route_table_id              = "rtb-003d6d6b6dbefbe47"
    state                       = "active"
    transit_gateway_id          = null
    vpc_endpoint_id             = null
    vpc_peering_connection_id   = null
}

# aws_route_table.privrt1:
resource "aws_route_table" "privrt1" {
    arn              = "arn:aws:ec2:ap-south-1:963329266843:route-table/rtb-05542466afe6956df"
    id               = "rtb-05542466afe6956df"
    owner_id         = "963329266843"
    propagating_vgws = []
    region           = "ap-south-1"
    route            = [
        {
            carrier_gateway_id         = null
            cidr_block                 = "0.0.0.0/0"
            core_network_arn           = null
            destination_prefix_list_id = null
            egress_only_gateway_id     = null
            gateway_id                 = null
            ipv6_cidr_block            = null
            local_gateway_id           = null
            nat_gateway_id             = "nat-0af4d9741c44a9ebc"
            network_interface_id       = null
            transit_gateway_id         = null
            vpc_endpoint_id            = null
            vpc_peering_connection_id  = null
        },
    ]
    tags             = {
        "Name" = "privrt1"
    }
    tags_all         = {
        "Name" = "privrt1"
    }
    vpc_id           = "vpc-01749bcbb72e03da4"
}

# aws_route_table_association.pvt:
resource "aws_route_table_association" "pvt" {
    gateway_id     = null
    id             = "rtbassoc-0885be38edf2bdc8b"
    region         = "ap-south-1"
    route_table_id = "rtb-05542466afe6956df"
    subnet_id      = "subnet-0e04cf3537d08ee71"
}

# aws_route_table_association.pvt2:
resource "aws_route_table_association" "pvt2" {
    gateway_id     = null
    id             = "rtbassoc-0af20d67137d45a2e"
    region         = "ap-south-1"
    route_table_id = "rtb-05542466afe6956df"
    subnet_id      = "subnet-0b4fc39eb5c7d510b"
}

# aws_security_group.albsg:
resource "aws_security_group" "albsg" {
    arn                    = "arn:aws:ec2:ap-south-1:963329266843:security-group/sg-0b8e930e4567bea8c"
    description            = "Managed by Terraform"
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = "Allow all outbound traffic"
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    id                     = "sg-0b8e930e4567bea8c"
    ingress                = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = "Allow HTTP from anywhere"
            from_port        = 80
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 80
        },
    ]
    name                   = "albsg"
    name_prefix            = null
    owner_id               = "963329266843"
    region                 = "ap-south-1"
    revoke_rules_on_delete = false
    tags                   = {
        "Name" = "albsg"
    }
    tags_all               = {
        "Name" = "albsg"
    }
    vpc_id                 = "vpc-01749bcbb72e03da4"
}

# aws_security_group.backendsg:
resource "aws_security_group" "backendsg" {
    arn                    = "arn:aws:ec2:ap-south-1:963329266843:security-group/sg-06d02a9fed4433524"
    description            = "Managed by Terraform"
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = "Allow all outbound"
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    id                     = "sg-06d02a9fed4433524"
    ingress                = [
        {
            cidr_blocks      = []
            description      = "Allow API traffic from ALB"
            from_port        = 5000
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = [
                "sg-0b8e930e4567bea8c",
            ]
            self             = false
            to_port          = 5000
        },
    ]
    name                   = "backendsg"
    name_prefix            = null
    owner_id               = "963329266843"
    region                 = "ap-south-1"
    revoke_rules_on_delete = false
    tags                   = {
        "Name" = "backendsg"
    }
    tags_all               = {
        "Name" = "backendsg"
    }
    vpc_id                 = "vpc-01749bcbb72e03da4"
}

# aws_security_group.frontendsg:
resource "aws_security_group" "frontendsg" {
    arn                    = "arn:aws:ec2:ap-south-1:963329266843:security-group/sg-0fcf09d90b2b963e1"
    description            = "Managed by Terraform"
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = null
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    id                     = "sg-0fcf09d90b2b963e1"
    ingress                = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = null
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 65535
        },
    ]
    name                   = "frontendsg"
    name_prefix            = null
    owner_id               = "963329266843"
    region                 = "ap-south-1"
    revoke_rules_on_delete = false
    tags                   = {
        "Name" = "frontendsg"
    }
    tags_all               = {
        "Name" = "frontendsg"
    }
    vpc_id                 = "vpc-01749bcbb72e03da4"
}

# aws_security_group.rds_sg:
resource "aws_security_group" "rds_sg" {
    arn                    = "arn:aws:ec2:ap-south-1:963329266843:security-group/sg-002b2bb7503bc9906"
    description            = "Managed by Terraform"
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = null
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    id                     = "sg-002b2bb7503bc9906"
    ingress                = [
        {
            cidr_blocks      = [
                "10.0.2.0/24",
            ]
            description      = null
            from_port        = 5432
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 5432
        },
    ]
    name                   = "terraform-20251014130154078700000001"
    name_prefix            = "terraform-"
    owner_id               = "963329266843"
    region                 = "ap-south-1"
    revoke_rules_on_delete = false
    tags                   = {}
    tags_all               = {}
    vpc_id                 = "vpc-01749bcbb72e03da4"
}

# aws_vpc_security_group_egress_rule.rule2:
resource "aws_vpc_security_group_egress_rule" "rule2" {
    arn                    = "arn:aws:ec2:ap-south-1:963329266843:security-group-rule/sgr-055b338bc714a20be"
    cidr_ipv4              = "0.0.0.0/0"
    id                     = "sgr-055b338bc714a20be"
    ip_protocol            = "-1"
    region                 = "ap-south-1"
    security_group_id      = "sg-0fcf09d90b2b963e1"
    security_group_rule_id = "sgr-055b338bc714a20be"
    tags_all               = {}
}

# aws_vpc_security_group_ingress_rule.rule1:
resource "aws_vpc_security_group_ingress_rule" "rule1" {
    arn                    = "arn:aws:ec2:ap-south-1:963329266843:security-group-rule/sgr-05052970724441b74"
    cidr_ipv4              = "0.0.0.0/0"
    from_port              = 0
    id                     = "sgr-05052970724441b74"
    ip_protocol            = "tcp"
    region                 = "ap-south-1"
    security_group_id      = "sg-0fcf09d90b2b963e1"
    security_group_rule_id = "sgr-05052970724441b74"
    tags_all               = {}
    to_port                = 65535
}


# module.backend1.aws_instance.ec2:
resource "aws_instance" "ec2" {
    ami                                  = "ami-02d26659fd82cf299"
    arn                                  = "arn:aws:ec2:ap-south-1:963329266843:instance/i-0c383aadf96452d56"
    associate_public_ip_address          = false
    availability_zone                    = "ap-south-1a"
    disable_api_stop                     = false
    disable_api_termination              = false
    ebs_optimized                        = false
    force_destroy                        = false
    get_password_data                    = false
    hibernation                          = false
    host_id                              = null
    iam_instance_profile                 = null
    id                                   = "i-0c383aadf96452d56"
    instance_initiated_shutdown_behavior = "stop"
    instance_lifecycle                   = null
    instance_state                       = "running"
    instance_type                        = "t2.micro"
    ipv6_address_count                   = 0
    ipv6_addresses                       = []
    key_name                             = "key123"
    monitoring                           = false
    outpost_arn                          = null
    password_data                        = null
    placement_group                      = null
    placement_group_id                   = null
    placement_partition_number           = 0
    primary_network_interface_id         = "eni-057653b757e30fe86"
    private_dns                          = "ip-10-0-2-38.ap-south-1.compute.internal"
    private_ip                           = "10.0.2.38"
    public_dns                           = null
    public_ip                            = null
    region                               = "ap-south-1"
    secondary_private_ips                = []
    security_groups                      = []
    source_dest_check                    = true
    spot_instance_request_id             = null
    subnet_id                            = "subnet-0e04cf3537d08ee71"
    tags                                 = {
        "Name" = "backend"
    }
    tags_all                             = {
        "Name" = "backend"
    }
    tenancy                              = "default"
    user_data                            = (sensitive value)
    user_data_replace_on_change          = false
    vpc_security_group_ids               = [
        "sg-06d02a9fed4433524",
    ]

    capacity_reservation_specification {
        capacity_reservation_preference = "open"
    }

    cpu_options {
        amd_sev_snp      = null
        core_count       = 1
        threads_per_core = 1
    }

    credit_specification {
        cpu_credits = "standard"
    }

    enclave_options {
        enabled = false
    }

    maintenance_options {
        auto_recovery = "default"
    }

    metadata_options {
        http_endpoint               = "enabled"
        http_protocol_ipv6          = "disabled"
        http_put_response_hop_limit = 2
        http_tokens                 = "required"
        instance_metadata_tags      = "disabled"
    }

    primary_network_interface {
        delete_on_termination = true
        network_interface_id  = "eni-057653b757e30fe86"
    }

    private_dns_name_options {
        enable_resource_name_dns_a_record    = false
        enable_resource_name_dns_aaaa_record = false
        hostname_type                        = "ip-name"
    }

    root_block_device {
        delete_on_termination = true
        device_name           = "/dev/sda1"
        encrypted             = false
        iops                  = 3000
        kms_key_id            = null
        tags                  = {}
        tags_all              = {}
        throughput            = 125
        volume_id             = "vol-0e17c6ab4c98ffc1a"
        volume_size           = 8
        volume_type           = "gp3"
    }
}


# module.frontend.aws_instance.ec2:
resource "aws_instance" "ec2" {
    ami                                  = "ami-02d26659fd82cf299"
    arn                                  = "arn:aws:ec2:ap-south-1:963329266843:instance/i-0aaa2b723f3a023f5"
    associate_public_ip_address          = true
    availability_zone                    = "ap-south-1b"
    disable_api_stop                     = false
    disable_api_termination              = false
    ebs_optimized                        = false
    force_destroy                        = false
    get_password_data                    = false
    hibernation                          = false
    host_id                              = null
    iam_instance_profile                 = null
    id                                   = "i-0aaa2b723f3a023f5"
    instance_initiated_shutdown_behavior = "stop"
    instance_lifecycle                   = null
    instance_state                       = "running"
    instance_type                        = "t2.micro"
    ipv6_address_count                   = 0
    ipv6_addresses                       = []
    key_name                             = "key123"
    monitoring                           = false
    outpost_arn                          = null
    password_data                        = null
    placement_group                      = null
    placement_group_id                   = null
    placement_partition_number           = 0
    primary_network_interface_id         = "eni-059e43b28018da387"
    private_dns                          = "ip-10-0-1-127.ap-south-1.compute.internal"
    private_ip                           = "10.0.1.127"
    public_dns                           = null
    public_ip                            = "3.110.188.108"
    region                               = "ap-south-1"
    secondary_private_ips                = []
    security_groups                      = []
    source_dest_check                    = true
    spot_instance_request_id             = null
    subnet_id                            = "subnet-051e280e3221b4075"
    tags                                 = {
        "Name" = "frontend"
    }
    tags_all                             = {
        "Name" = "frontend"
    }
    tenancy                              = "default"
    user_data                            = <<-EOT
        #!/bin/bash
        
        apt-get update -y
        apt-get install -y docker.io
        systemctl start docker
        systemctl enable docker
        
        docker pull gayatri491/frontend_app3:latest 
        docker run -d -p 80:80 gayatri491/frontend_app3:latest
    EOT
    user_data_replace_on_change          = false
    vpc_security_group_ids               = [
        "sg-0fcf09d90b2b963e1",
    ]

    capacity_reservation_specification {
        capacity_reservation_preference = "open"
    }

    cpu_options {
        amd_sev_snp      = null
        core_count       = 1
        threads_per_core = 1
    }

    credit_specification {
        cpu_credits = "standard"
    }

    enclave_options {
        enabled = false
    }

    maintenance_options {
        auto_recovery = "default"
    }

    metadata_options {
        http_endpoint               = "enabled"
        http_protocol_ipv6          = "disabled"
        http_put_response_hop_limit = 2
        http_tokens                 = "required"
        instance_metadata_tags      = "disabled"
    }

    primary_network_interface {
        delete_on_termination = true
        network_interface_id  = "eni-059e43b28018da387"
    }

    private_dns_name_options {
        enable_resource_name_dns_a_record    = false
        enable_resource_name_dns_aaaa_record = false
        hostname_type                        = "ip-name"
    }

    root_block_device {
        delete_on_termination = true
        device_name           = "/dev/sda1"
        encrypted             = false
        iops                  = 3000
        kms_key_id            = null
        tags                  = {}
        tags_all              = {}
        throughput            = 125
        volume_id             = "vol-04d9a22d6e119069a"
        volume_size           = 8
        volume_type           = "gp3"
    }
}


# module.private_subnet1.aws_subnet.sub:
resource "aws_subnet" "sub" {
    arn                                            = "arn:aws:ec2:ap-south-1:963329266843:subnet/subnet-0e04cf3537d08ee71"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "ap-south-1a"
    availability_zone_id                           = "aps1-az1"
    cidr_block                                     = "10.0.2.0/24"
    customer_owned_ipv4_pool                       = null
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0e04cf3537d08ee71"
    ipv6_cidr_block                                = null
    ipv6_cidr_block_association_id                 = null
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    outpost_arn                                    = null
    owner_id                                       = "963329266843"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "ap-south-1"
    tags                                           = {}
    tags_all                                       = {}
    vpc_id                                         = "vpc-01749bcbb72e03da4"
}


# module.private_subnet2.aws_subnet.sub:
resource "aws_subnet" "sub" {
    arn                                            = "arn:aws:ec2:ap-south-1:963329266843:subnet/subnet-0b4fc39eb5c7d510b"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "ap-south-1b"
    availability_zone_id                           = "aps1-az3"
    cidr_block                                     = "10.0.4.0/24"
    customer_owned_ipv4_pool                       = null
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0b4fc39eb5c7d510b"
    ipv6_cidr_block                                = null
    ipv6_cidr_block_association_id                 = null
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    outpost_arn                                    = null
    owner_id                                       = "963329266843"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "ap-south-1"
    tags                                           = {}
    tags_all                                       = {}
    vpc_id                                         = "vpc-01749bcbb72e03da4"
}


# module.public_subnet1.aws_subnet.sub:
resource "aws_subnet" "sub" {
    arn                                            = "arn:aws:ec2:ap-south-1:963329266843:subnet/subnet-051e280e3221b4075"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "ap-south-1b"
    availability_zone_id                           = "aps1-az3"
    cidr_block                                     = "10.0.1.0/24"
    customer_owned_ipv4_pool                       = null
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-051e280e3221b4075"
    ipv6_cidr_block                                = null
    ipv6_cidr_block_association_id                 = null
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    outpost_arn                                    = null
    owner_id                                       = "963329266843"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "ap-south-1"
    tags                                           = {}
    tags_all                                       = {}
    vpc_id                                         = "vpc-01749bcbb72e03da4"
}


# module.public_subnet2.aws_subnet.sub:
resource "aws_subnet" "sub" {
    arn                                            = "arn:aws:ec2:ap-south-1:963329266843:subnet/subnet-002883a4d50eda0ff"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "ap-south-1a"
    availability_zone_id                           = "aps1-az1"
    cidr_block                                     = "10.0.3.0/24"
    customer_owned_ipv4_pool                       = null
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-002883a4d50eda0ff"
    ipv6_cidr_block                                = null
    ipv6_cidr_block_association_id                 = null
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    outpost_arn                                    = null
    owner_id                                       = "963329266843"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "ap-south-1"
    tags                                           = {}
    tags_all                                       = {}
    vpc_id                                         = "vpc-01749bcbb72e03da4"
}


# module.threetier.aws_vpc.threetier:
resource "aws_vpc" "threetier" {
    arn                                  = "arn:aws:ec2:ap-south-1:963329266843:vpc/vpc-01749bcbb72e03da4"
    assign_generated_ipv6_cidr_block     = false
    cidr_block                           = "10.0.0.0/16"
    default_network_acl_id               = "acl-05429e555c3441c80"
    default_route_table_id               = "rtb-003d6d6b6dbefbe47"
    default_security_group_id            = "sg-0a4378bceb37a0928"
    dhcp_options_id                      = "dopt-090a6160f1e915cea"
    enable_dns_hostnames                 = false
    enable_dns_support                   = true
    enable_network_address_usage_metrics = false
    id                                   = "vpc-01749bcbb72e03da4"
    instance_tenancy                     = "default"
    ipv6_association_id                  = null
    ipv6_cidr_block                      = null
    ipv6_cidr_block_network_border_group = null
    ipv6_ipam_pool_id                    = null
    ipv6_netmask_length                  = 0
    main_route_table_id                  = "rtb-003d6d6b6dbefbe47"
    owner_id                             = "963329266843"
    region                               = "ap-south-1"
    tags                                 = {}
    tags_all                             = {}
}


Outputs:

backendip = null
frontendip = "3.110.188.108"
